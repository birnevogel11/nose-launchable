name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  LAUNCHABLE_ORGANIZATION: "launchableinc"
  LAUNCHABLE_WORKSPACE: "nose-launchable"
  GITHUB_PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r test-requirements.txt
        pip install -r requirements.txt
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: launchable verify
      run: launchable verify
    - name: launchable record build
      run: launchable record build --name ${GITHUB_RUN_ID}
    - name: launchable subset
      run: pytest --collect-only -q | launchable subset --target 70% --observation --flavor python=${{ matrix.python-version }} pytest > launchable-subset.txt
    - name: Test with pytest
      run: |
        pytest --junit-xml=test-results/results.xml $(cat launchable-subset.txt)
    - name: launchable record build
      if: always()
      run: launchable record tests pytest test-results/results.xml


